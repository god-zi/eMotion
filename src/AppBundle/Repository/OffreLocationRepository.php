<?php

namespace AppBundle\Repository;

/**
 * OffreLocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OffreLocationRepository extends \Doctrine\ORM\EntityRepository
{
    public function findMinEtMaxPrix()
    {
        $query = $this->createQueryBuilder('ol');
        $query->select('MIN(ol.prixJournalier) AS minP');
        $query->addSelect('MAX(ol.prixJournalier) AS maxP');

        return $query->getQuery()->getSingleResult();
    }

    public function findRecommandations($params)
    {
        $recommandations = array();
        $sameId = null;
        if($params->get('recherche')) {
            $params = unserialize($params->get('recherche'));
            if (!empty($params['idVehicule'])) {
                //par vehicule
                $query = $this->createQueryBuilder('o')
                    ->select('o')
                    ->where('o.vehicule = :idVehicule')
                    ->setParameter('idVehicule', $params['idVehicule'])
                    ->getQuery();

                if (isset($query->getResult()[0])) {
                    $recommandations[] = $query->getResult()[0];
                    $sameId = $query->getResult()[0]->getId();
                }
            }
            if ($params['prixMinJ'] && $params['prixMinJ'] > 0 && $params['prixMaxJ'] > 0) {
                //par fourchette de prix
                $query = $this->createQueryBuilder('ol')
                    ->select('ol')
                    ->where('ol.prixJournalier >= :prixMin AND ol.prixJournalier <= :prixMax')
                    ->setParameter('prixMin', $params['prixMinJ'])
                    ->setParameter('prixMax', $params['prixMaxJ'])
                    ->setMaxResults(2)
                    ->getQuery();

                for ($i = 0; $i < count($query->getResult()); $i++) {
                    if (isset($query->getResult()[$i])) {
                        if($sameId != $query->getResult()[$i]->getId()){
                            $recommandations[] = $query->getResult()[$i];
                        }
                    }
                }
            }
        }
        
        if (!$recommandations) {
            $recommandations = $this->findBy(array(), array('id' => 'ASC'), 3);
        }

        return $recommandations;
    }
}
